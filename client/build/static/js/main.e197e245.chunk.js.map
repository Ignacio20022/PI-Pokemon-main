{"version":3,"sources":["components/EditPokemon/EditPokemoin.module.css","components/Navbar/Navbar.module.css","components/Home/home.module.css","components/Pagination/Pagination.module.css","components/PokemonsCard/PokemonCard.module.css","components/PokemonDetails/PokemonDetails.module.css","components/SearchBar/SearchBar.module.css","components/Loading/Loading.module.css","components/Landing/Landing.module.css","components/CreatePokemon/CreatePokemon.module.css","redux/actions/index.js","redux/reducer/index.js","redux/store/index.js","components/PokemonsCard/PokemonCard.jsx","components/Pagination/Pagination.jsx","components/SearchBar/SearchBar.jsx","components/Navbar/HomeNavbar.jsx","assets/pokeball_loading.gif","components/Loading/Loading.jsx","components/Navbar/Navbar.jsx","components/Error/Error.jsx","assets/sad_pikachu.png","components/Home/Home.jsx","components/Landing/Landing.jsx","components/PokemonDetails/PokemonDetails.jsx","components/NotFound/NotFound.jsx","components/CreatePokemon/Validators.jsx","components/CreatePokemon/CreatePokemon.jsx","components/EditPokemon/Validators.jsx","components/EditPokemon/EditPokemon.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","dotenv","config","GET_ALL_POKEMONS","GET_ALL_POKEMONS_NAMES","GET_POKEMON_BY_ID","GET_TYPES","CREATE_POKEMON","DELETE_POKEMON","CLEAR_DETAILS","FILTER_POKEMONS","RESET_FILTERS","ERROR","CLEAR_ERROR","getAllNames","dispatch","axios","get","then","pokemonNames","type","payload","data","catch","error","getTypes","pokemonsType","clearError","initialState","pokemons","pokemonDetails","filteredPokemons","pokemonsNames","types","errors","rootReducer","state","action","concat","filter","pokemon","id","sortBy","API_or_DB","filtered","slice","length","sort","a","b","name","toLowerCase","attk","hp","includes","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","PokemonCard","props","className","style","box","select","to","link","nombre","map","img","src","alt","Pagination","totalPosts","postsPerPage","setCurrentPage","currentPage","maxLimit","setPokemonsToShow","setMaxLimit","minLimit","setMinLimit","pageLimit","pages","setPageLimit","x","Math","ceil","push","rederPagination","page","index","hidden","buttonNumActive","buttonNum","onClick","pageIncrementBtn","buttonPrevNext","pageDecrementBtn","pagination","SearchBar","setSearch","search","s","onSubmit","event","preventDefault","placeholder","onChange","target","value","Navbar","setPostsPerPage","navbar","home","selector","defaultValue","searchbar","create","Loading","loading","NavbarNoSearch","Error","Home","useDispatch","useSelector","useState","filters","setFilters","handleAllFilters","useEffect","actions","lastPostIndex","firstPostIndex","mainComponent","currentPokemons","sadPoke","SadPikachu","filtersButtons","sortsContainer","sorts","pokesFrom","title","Landing","PokemonDetail","useParams","ReactRedux","parseInt","Object","keys","details","toUpperCase","def","speed","height","weight","deleteBttn","delete","alert","editBttn","NotFound","Component","validateInputs","input","test","trim","CreatePokemon","setErrors","setState","handleInputs","checked","isChecked","oldData","newData","i","form","form2","post","autoComplete","spellCheck","button","disabled","lista2","htmlFor","console","log","put","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","process","REACT_APP_API","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e197e245.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"EditPokemoin_box__11AaR\",\"form\":\"EditPokemoin_form__dH5Jj\",\"form2\":\"EditPokemoin_form2__3eoM6\",\"errors\":\"EditPokemoin_errors__efoRx\",\"types\":\"EditPokemoin_types__2icCP\",\"button\":\"EditPokemoin_button__TQnzr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__38Pm6\",\"selector\":\"Navbar_selector__PmwZz\",\"searchbar\":\"Navbar_searchbar__3pQqr\",\"link\":\"Navbar_link__3t3s6\",\"home\":\"Navbar_home__2KlD4\",\"create\":\"Navbar_create__2QDX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sortsContainer\":\"home_sortsContainer__oA-M0\",\"sorts\":\"home_sorts__6XfZX\",\"pokesFrom\":\"home_pokesFrom__cd1g_\",\"sadPoke\":\"home_sadPoke__2LcDB\",\"home\":\"home_home__34Xj8\",\"error\":\"home_error__U0KQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__34scg\",\"buttonPrevNext\":\"Pagination_buttonPrevNext__1M-4b\",\"buttonNum\":\"Pagination_buttonNum__AsS-Q\",\"buttonNumActive\":\"Pagination_buttonNumActive__n2anF\",\"arePokemon\":\"Pagination_arePokemon__1NVpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"PokemonCard_box__22yK2\",\"select\":\"PokemonCard_select__1ZDGZ\",\"nombre\":\"PokemonCard_nombre__2_27Y\",\"link\":\"PokemonCard_link__1qyuv\",\"img\":\"PokemonCard_img__1xhXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"PokemonDetails_details__3nQBP\",\"deleteBttn\":\"PokemonDetails_deleteBttn__2VR0O\",\"editBttn\":\"PokemonDetails_editBttn__3AJb4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchBar_search__17Nmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__2uv2B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Landing_box__1fKyc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"CreatePokemon_box__3fEB9\",\"form\":\"CreatePokemon_form__2cxQM\",\"form2\":\"CreatePokemon_form2__2xN1H\",\"errors\":\"CreatePokemon_errors__2jnl9\",\"types\":\"CreatePokemon_types__UkMIp\",\"button\":\"CreatePokemon_button__1b4pZ\"};","import axios from 'axios'\r\nimport dotenv from 'dotenv'\r\ndotenv.config()\r\n\r\nexport const GET_ALL_POKEMONS = \"GET_ALL_POKEMONS\"\r\nexport const GET_ALL_POKEMONS_NAMES = \"GET_ALL_POKEMONS_NAMES\"\r\nexport const GET_POKEMON_BY_ID = \"GET_POKEMON_BY_ID\"\r\nexport const GET_POKEMON_BY_NAME = \"GET_POKEMON_BY_NAME\"\r\nexport const GET_TYPES = \"GET_TYPES\"\r\nexport const CREATE_POKEMON = \"CREATE_POKEMON\"\r\nexport const DELETE_POKEMON = \"DELETE_POKEMON\"\r\nexport const CLEAR_DETAILS = \"CLEAR_DETAILS\" \r\nexport const FILTER_POKEMONS = \"FILTER_POKEMONS\"\r\nexport const RESET_FILTERS = \"RESET_FILTERS\"\r\nexport const ERROR = \"ERROR\"\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\"\r\n\r\nexport const getAllPokemons = () => {\r\n    return async function(dispatch){\r\n        await axios.get(`/pokemons`)\r\n        .then((pokemon) => {\r\n            dispatch({\r\n                type: GET_ALL_POKEMONS, \r\n                payload: pokemon.data\r\n            })\r\n        })\r\n        .catch((error) => { \r\n            dispatch({\r\n                type: ERROR,\r\n            })\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const getAllNames = () => {\r\n    return async function(dispatch){\r\n        await axios.get(`/pokemons/names`)\r\n        .then((pokemonNames) => {\r\n            dispatch({\r\n                type: GET_ALL_POKEMONS_NAMES,\r\n                payload: pokemonNames.data\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            dispatch({\r\n                type: ERROR,\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const getPokemonById = (id) => {\r\n    return async function(dispatch){\r\n        await axios.get(`/pokemons/details/${id}`)\r\n        .then((pokemon) => {\r\n            dispatch({\r\n                type: GET_POKEMON_BY_ID,\r\n                payload: pokemon.data\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            dispatch({\r\n                type: ERROR,\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const getPokemonByName = (name) => {\r\n    return async function(dispatch){\r\n        await axios.get(`/pokemons?name=${name}`)\r\n        .then((pokemon) => {\r\n            dispatch({\r\n                type: GET_POKEMON_BY_NAME,\r\n                payload: pokemon.data\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            dispatch({\r\n                type: ERROR,\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const getTypes = () => {\r\n    return async function(dispatch){\r\n        await axios.get(`/types`)\r\n        .then((pokemonsType) => {\r\n            dispatch({\r\n                type: GET_TYPES,\r\n                payload: pokemonsType.data\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            dispatch({\r\n                type: ERROR,\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const createPokemon = (data) => {\r\n    return async function(dispatch){\r\n        await axios.post(`/pokemons/create`,{data})\r\n        .catch((error) => {\r\n            dispatch({\r\n                type: ERROR,\r\n            })\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const editPokemon = (id, data) => {\r\n    console.log(id);\r\n    console.log(data);\r\n    return async function(dispatch){\r\n        await axios.put(`/pokemons/edit/${id}`, {data})\r\n        .catch((error) => {\r\n            dispatch({\r\n                type: ERROR\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const clearDetail = () => {\r\n    return {\r\n        type: CLEAR_DETAILS\r\n    }\r\n}\r\n\r\nexport const filterPokemons = (filters) => {\r\n    return function(dispatch){\r\n        dispatch({\r\n            type: FILTER_POKEMONS,\r\n            payload: filters\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetFilters = () => {\r\n    return function(dispatch){\r\n        dispatch({\r\n            type: RESET_FILTERS,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deletePokemon = (id) => {\r\n    return async function(dispatch){\r\n        await axios.delete(`/pokemons/delete/${id}`)\r\n        .catch((error) => {\r\n            dispatch({\r\n                type: ERROR,\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const clearError = () => {\r\n    return function(dispatch){\r\n        dispatch({\r\n            type: CLEAR_ERROR\r\n        })\r\n    }\r\n}","import { \r\n    GET_ALL_POKEMONS,\r\n    GET_ALL_POKEMONS_NAMES,\r\n    GET_POKEMON_BY_ID,\r\n    // GET_POKEMON_BY_NAME,\r\n    GET_TYPES,\r\n    CREATE_POKEMON,\r\n    DELETE_POKEMON,\r\n    CLEAR_DETAILS,\r\n    FILTER_POKEMONS,\r\n    RESET_FILTERS,\r\n    ERROR,\r\n    CLEAR_ERROR\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n    pokemons: [],\r\n    pokemonDetails: {},\r\n    filteredPokemons: [],\r\n    pokemonsNames:[],\r\n    types: [],\r\n    errors: false,\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_POKEMONS:\r\n            return {\r\n                ...state,\r\n                errors: false,\r\n                pokemons: action.payload\r\n            }\r\n        case GET_ALL_POKEMONS_NAMES:\r\n            return {\r\n                ...state,\r\n                errors: false,\r\n                pokemonsNames: action.payload\r\n            }\r\n        case GET_POKEMON_BY_ID:\r\n            return{\r\n                ...state,\r\n                errors: false,\r\n                pokemonDetails: action.payload\r\n            }\r\n        // case GET_POKEMON_BY_NAME:\r\n        //     return{\r\n        //         ...state,\r\n        //         errors: false,\r\n        //         filteredPokemons: [action.payload]\r\n        //     }\r\n        case GET_TYPES:\r\n            return{\r\n                ...state,\r\n                errors: false,\r\n                types: action.payload\r\n            }\r\n        case CREATE_POKEMON:\r\n            return{\r\n                ...state,\r\n                errors: false,\r\n                pokemons: state.pokemons.concat(action.payload)\r\n            }\r\n        case DELETE_POKEMON:\r\n            return{\r\n                ...state,\r\n                errors: false,\r\n                pokemons: state.pokemons.filter((pokemon) => pokemon.id !== action.payload)\r\n            }    \r\n        case CLEAR_DETAILS:\r\n            return{\r\n                ...state,\r\n                errors: false,\r\n                pokemonDetails: {}\r\n            }\r\n        case FILTER_POKEMONS:\r\n            const {sortBy, API_or_DB, types} = action.payload\r\n\r\n            let filtered = []\r\n\r\n            filtered = state.pokemons.slice()\r\n\r\n            if(API_or_DB === 'API') filtered = state.pokemons.filter((pokemon) => pokemon.id < 20000)\r\n            if(API_or_DB === 'DB') {\r\n                filtered = filtered.filter((pokemon) => pokemon.id > 20000)\r\n                if(!filtered.length) filtered[0] = 'inexistent DB'\r\n            }\r\n            \r\n            if(sortBy === \"A-Z\"){\r\n                filtered.sort((a,b) => {\r\n                    if(a.name.toLowerCase() > b.name.toLowerCase())return 1;\r\n                    if(a.name.toLowerCase() < b.name.toLowerCase())return -1;\r\n                    return 0;\r\n                })\r\n            }\r\n            if (sortBy === \"Z-A\"){\r\n                filtered.sort((a,b) => {\r\n                    if(a.name.toLowerCase() < b.name.toLowerCase())return 1;\r\n                    if(a.name.toLowerCase() > b.name.toLowerCase())return -1;\r\n                    return 0;\r\n                })\r\n            }\r\n            if(sortBy === \"+ATTK\"){\r\n                filtered.sort((a,b) => {\r\n                    if(a.attk < b.attk) return 1\r\n                    if(a.attk > b.attk) return -1\r\n                    return 0\r\n                })\r\n            }\r\n            if(sortBy === \"-ATTK\"){\r\n                filtered.sort((a,b) => {\r\n                    if(a.attk > b.attk) return 1\r\n                    if(a.attk < b.attk) return -1\r\n                    return 0\r\n                })\r\n            }\r\n            if(sortBy === '+HP'){\r\n                filtered.sort((a,b) => {\r\n                    if(a.hp < b.hp) return 1\r\n                    if(a.hp > b.hp) return -1\r\n                    return 0 \r\n                })\r\n            }\r\n            if(sortBy === '-HP'){\r\n                filtered.sort((a,b) => {\r\n                    if(a.hp > b.hp) return 1\r\n                    if(a.hp < b.hp) return -1\r\n                    return 0 \r\n                })\r\n            }\r\n            if(types !== 'default' && filtered[0] !== 'inexistent DB') {\r\n                filtered = filtered.filter((pokemon) => pokemon.types.includes(types))\r\n                if(!filtered.length) filtered[0] = 'inexistent type'\r\n            }\r\n            return{\r\n                ...state,\r\n                errors: false,\r\n                filteredPokemons: filtered\r\n            }\r\n        case RESET_FILTERS:\r\n            return{\r\n                ...state,\r\n                errors: false,\r\n                filteredPokemons: []\r\n            }\r\n        case ERROR:\r\n            return{\r\n                ...state,\r\n                error: true\r\n            }\r\n        case CLEAR_ERROR:\r\n            return{\r\n                ...state,\r\n                error: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from '../reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers =\r\n   (typeof window !== 'undefined' &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n   compose;\r\n\r\nconst store = createStore(\r\n   rootReducer,\r\n   composeEnhancers(applyMiddleware(thunk)),\r\n);\r\n\r\nexport default store;\r\n","import style from './PokemonCard.module.css'\r\n\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PokemonCard(props){\r\n\r\n    return(\r\n        <div className={style.box} key={props.id}>\r\n            <div className={style.select}>\r\n            <Link to={`/pokemons/details/${props.id}`} className={style.link}>\r\n                <h1 className={style.nombre}>{props.name}</h1>\r\n                <div>\r\n                    <h3 className={style.types}>{props.types?.map((type) => type + \" \")}</h3>\r\n                    <img id={style.img} src={props.img} alt='Pokemon'/>\r\n                </div>\r\n            </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport style from \"./Pagination.module.css\";\r\n\r\nexport default function Pagination({\r\n    totalPosts,\r\n    postsPerPage,\r\n    setCurrentPage,\r\n    currentPage,\r\n    setPokemonsToShow,\r\n    maxLimit,\r\n    setMaxLimit,\r\n    minLimit,\r\n    setMinLimit,\r\n    pageLimit,\r\n    setPageLimit,\r\n}) {\r\n    let pages = [];\r\n\r\n    for (let x = 1; x <= Math.ceil(totalPosts / postsPerPage); x++) {\r\n        pages.push(x);\r\n    }\r\n\r\n    const rederPagination = pages.map((page, index) => {\r\n        if (page < maxLimit + 1 && page > minLimit) {\r\n            return (\r\n                <button\r\n                    hidden={totalPosts <= postsPerPage}\r\n                    className={\r\n                        page === currentPage\r\n                            ? style.buttonNumActive\r\n                            : style.buttonNum\r\n                    }\r\n                    key={index}\r\n                    onClick={() => setCurrentPage(page)}\r\n                >\r\n                    {page}\r\n                </button>\r\n            );\r\n        } else return null;\r\n    });\r\n\r\n    let pageIncrementBtn = null;\r\n\r\n    if (pages.length > maxLimit) {\r\n        pageIncrementBtn = (\r\n            <button\r\n                className={style.buttonPrevNext}\r\n                onClick={() => {\r\n                    if (currentPage < pages.length) {\r\n                        setCurrentPage(maxLimit + 1);\r\n                        if (currentPage + pageLimit > maxLimit) {\r\n                            setMaxLimit(maxLimit + pageLimit);\r\n                            setMinLimit(minLimit + pageLimit);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                &hellip;\r\n            </button>\r\n        );\r\n    }\r\n\r\n    let pageDecrementBtn = null;\r\n\r\n    if (pages.length > minLimit) {\r\n        pageDecrementBtn = (\r\n            <button\r\n                className={style.buttonPrevNext}\r\n                hidden={currentPage < 11}\r\n                onClick={() => {\r\n                    if (currentPage > 1) {\r\n                        setCurrentPage(minLimit);\r\n                        setMaxLimit(maxLimit - pageLimit);\r\n                        setMinLimit(minLimit - pageLimit);\r\n                    }\r\n                }}\r\n            >\r\n                &hellip;\r\n            </button>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={style.pagination}>\r\n            <button\r\n                hidden={totalPosts <= postsPerPage}\r\n                className={style.buttonPrevNext}\r\n                onClick={() => {\r\n                    if (currentPage > 1) {\r\n                        setCurrentPage(currentPage - 1);\r\n                        if ((currentPage - 1) % pageLimit === 0) {\r\n                            setMaxLimit(maxLimit - pageLimit);\r\n                            setMinLimit(minLimit - pageLimit);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {\" < \"}\r\n            </button>\r\n\r\n            {pageDecrementBtn}\r\n            {rederPagination}\r\n            {pageIncrementBtn}\r\n\r\n            <button\r\n                hidden={totalPosts <= postsPerPage}\r\n                className={style.buttonPrevNext}\r\n                onClick={() => {\r\n                    if (currentPage < pages.length) {\r\n                        setCurrentPage(currentPage + 1);\r\n                        if (currentPage + 1 > maxLimit) {\r\n                            setMaxLimit(maxLimit + pageLimit);\r\n                            setMinLimit(minLimit + pageLimit);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {\" > \"}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import * as actions from '../../redux/actions/index.js'\r\n\r\nimport s from \"./SearchBar.module.css\";\r\n\r\nexport default function SearchBar({\r\n    setSearch,\r\n    setCurrentPage,\r\n    search,\r\n    setMaxLimit,\r\n    setMinLimit,\r\n}) {\r\n    // const dispatch = useDispatch()\r\n    // const [name, setName] = useState(\"\");\r\n\r\n    const handleName = (event) => {\r\n        event.preventDefault();\r\n        // setName(event.target.value)\r\n        setCurrentPage(1);\r\n        setMinLimit(0);\r\n        setMaxLimit(10);\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // dispatch(actions.getPokemonByName(name))\r\n        // search(name)\r\n    };\r\n\r\n    return (\r\n        <form className={s.search} onSubmit={handleSubmit}>\r\n            <input\r\n                // className={style.searchBar}\r\n                type='text'\r\n                placeholder='Search pokemons'\r\n                onChange={handleName}\r\n                value={search}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport style from \"./Navbar.module.css\";\r\n\r\nexport default function Navbar({\r\n    setPostsPerPage,\r\n    setSearch,\r\n    setCurrentPage,\r\n    search,\r\n    setMaxLimit,\r\n    setMinLimit,\r\n    setPageLimit,\r\n}) {\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n        setCurrentPage(1);\r\n        setMinLimit(0);\r\n        setMaxLimit(10);\r\n        setPostsPerPage(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={style.navbar}>\r\n                <Link to='/pokemons' className={style.link}>\r\n                    <span className={style.home}>Home</span>\r\n                </Link>\r\n                <div className={style.selector}>\r\n                    <label>\r\n                        Pokemons to show <br></br>per page:{\" \"}\r\n                    </label>\r\n                    <select defaultValue={12} onChange={handleChange}>\r\n                        <option value={1}>1</option>\r\n                        <option value={5}>5</option>\r\n                        <option value={10}>10</option>\r\n                        <option value={12}>12</option>\r\n                        <option value={30}>30</option>\r\n                        <option value={50}>50</option>\r\n                    </select>\r\n                </div>\r\n                <div className={style.searchbar}>\r\n                    <SearchBar\r\n                        search={search}\r\n                        setSearch={setSearch}\r\n                        setCurrentPage={setCurrentPage}\r\n                        setMaxLimit={setMaxLimit}\r\n                        setMinLimit={setMinLimit}\r\n                    />\r\n                </div>\r\n                <Link to='/pokemons/create' className={style.link}>\r\n                    <span className={style.create}>Create</span>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pokeball_loading.94cd27f1.gif\";","import React from \"react\";\r\nimport s from './Loading.module.css'\r\nimport loading from '../../assets/pokeball_loading.gif'\r\n\r\nexport default function Loading(){\r\n    return(\r\n        <div className={s.loading}>\r\n            <img src={loading} alt='loading...'/>\r\n        </div>\r\n    )\r\n}","import { Link } from 'react-router-dom'\r\nimport style from './Navbar.module.css'\r\n\r\nexport default function NavbarNoSearch(){\r\n    return(\r\n        <>  \r\n            <div className={style.navbar}>\r\n                <Link to='/pokemons' className={style.link}>\r\n                    <span className={style.home}>Home</span>\r\n                </Link>\r\n                <Link to='/pokemons/create' className={style.link}>\r\n                    <span className={style.create}>Create</span>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport NavbarNoSearch from \"../Navbar/Navbar\"\r\n\r\nexport default function Error(){\r\n    return(\r\n        <div>\r\n            <NavbarNoSearch/>\r\n            <h1>Unexpected error happened</h1>\r\n        </div> \r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/sad_pikachu.30baaa13.png\";","import style from \"./home.module.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PokemonCard from \"../PokemonsCard/PokemonCard.jsx\";\r\nimport * as actions from \"../../redux/actions/index.js\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Pagination from \"../Pagination/Pagination.jsx\";\r\nimport Navbar from \"../Navbar/HomeNavbar\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport Error from '../Error/Error'\r\nimport SadPikachu from '../../assets/sad_pikachu.png'\r\n\r\nexport default function Home() {\r\n    const dispatch = useDispatch();\r\n\r\n    let pokemons = useSelector((state) => state.pokemons);\r\n    const filteredPokemons = useSelector((state) => state.filteredPokemons);\r\n    const types = useSelector((state) => state.types);\r\n    const error = useSelector((state) => state.error)\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const [filters, setFilters] = useState({\r\n        sortBy: \"default\",\r\n        API_or_DB: \"default\",\r\n        types: \"default\",\r\n    })\r\n\r\n    const handleAllFilters = (event) => {\r\n        event.preventDefault();\r\n        setFilters({\r\n            ...filters,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n        setCurrentPage(1);\r\n        setMinLimit(0);\r\n        setMaxLimit(10);\r\n    };\r\n    useEffect(() => {\r\n        dispatch(actions.filterPokemons(filters));\r\n    }, [dispatch, filters]);\r\n\r\n    const resetFilters = (event) => {\r\n        event.preventDefault();\r\n        setFilters({\r\n            sortBy: \"default\",\r\n            API_or_DB: \"default\",\r\n            types: \"default\",\r\n        });\r\n        setSearch(\"\");\r\n        setCurrentPage(1);\r\n        setMinLimit(0);\r\n        setMaxLimit(10);\r\n        dispatch(actions.resetFilters());\r\n    };\r\n\r\n    //Pagination\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(12);\r\n\r\n    const [pageLimit, setPageLimit] = useState(10);\r\n    const [maxLimit, setMaxLimit] = useState(10);\r\n    const [minLimit, setMinLimit] = useState(0);\r\n\r\n    if (filteredPokemons.length > 0) pokemons = filteredPokemons;\r\n\r\n\r\n\r\n    const lastPostIndex = currentPage * postsPerPage;\r\n    const firstPostIndex = lastPostIndex - postsPerPage;\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.clearError())\r\n        if(!pokemons.length) dispatch(actions.getAllPokemons());\r\n        if(!types.length) dispatch(actions.getTypes());\r\n    }, [dispatch, pokemons.length, types.length]);\r\n    \r\n\r\n    //check if there was an error\r\n    if(error){\r\n        return <Error/>\r\n    }\r\n    else if (!pokemons.length && search === \"\" && error === false) {\r\n        return <Loading />;\r\n    }\r\n\r\n    let mainComponent = null\r\n\r\n    if (search.length > 0 && pokemons[0] !== 'inexistent DB' && pokemons[0] !== 'inexistent type') {\r\n        pokemons = pokemons.filter((pokemon) => {\r\n            if (\r\n                pokemon.name.toLowerCase().includes(search.toLowerCase()) ||\r\n                pokemon.name.includes(search)\r\n            )\r\n                return pokemon;\r\n            else return null\r\n        });\r\n    }\r\n\r\n    //pagination\r\n    const currentPokemons = pokemons.slice(firstPostIndex, lastPostIndex);\r\n\r\n    if (currentPokemons.length && currentPokemons[0] !== 'inexistent DB' && currentPokemons[0] !== 'inexistent type') { \r\n        mainComponent = \r\n            currentPokemons.map((pokemon) => {\r\n                return (         \r\n                    <PokemonCard\r\n                        key={pokemon.id}\r\n                        id={pokemon.id}\r\n                        name={pokemon.name}\r\n                        types={pokemon.types}\r\n                        img={pokemon.img}\r\n                    />\r\n                );\r\n            })\r\n    } \r\n    else if (currentPokemons.length && currentPokemons[0] === 'inexistent DB')\r\n        mainComponent = \r\n            <>\r\n                <h1>There are no Pokemons in the Data Base </h1> \r\n                <img className={style.sadPoke} src={SadPikachu} alt='pikachu sad'/>\r\n            </>\r\n    else if(currentPokemons.length && currentPokemons[0] === 'inexistent type') {\r\n        mainComponent = \r\n            <>\r\n                <h1>No Pokemon exist with that type</h1>\r\n                <img className={style.sadPoke} src={SadPikachu} alt='pikachu sad'/>\r\n            </>\r\n    }\r\n    else{\r\n        mainComponent = \r\n            <>\r\n                <h1>No pokemon has '{search}' in their name</h1>\r\n                <img className={style.sadPoke} src={SadPikachu} alt='pikachu sad'/>\r\n            </>\r\n    }\r\n    \r\n    \r\n    const filtersButtons = (\r\n        <div className={style.sortsContainer}>\r\n            <select\r\n                name='sortBy'\r\n                value={filters.sortBy}\r\n                className={style.sorts}\r\n                onChange={handleAllFilters}\r\n            >\r\n                <option hidden value='default'>\r\n                    Sort by...\r\n                </option>\r\n                {/* <option value='default'>By default</option> */}\r\n                <option value='A-Z'>A-Z</option>\r\n                <option value='Z-A'>Z-A</option>\r\n                <option value='+attk'>+attk</option>\r\n                <option value='-attk'>-attk</option>\r\n                <option value='+hp'>+hp</option>\r\n                <option value='-hp'>-hp</option>\r\n            </select>\r\n\r\n            <select\r\n                name='API_or_DB'\r\n                value={filters.API_or_DB}\r\n                className={style.pokesFrom}\r\n                onChange={handleAllFilters}\r\n            >\r\n                <option hidden value='default'>\r\n                    Show pokemons from...\r\n                </option>\r\n                {/* <option value='default'> By default</option> */}\r\n                <option value='API'>Poke API</option>\r\n                <option value='DB'>Data Base</option>\r\n            </select>\r\n\r\n            <select\r\n                name='types'\r\n                value={filters.types}\r\n                className={style.sorts}\r\n                onChange={handleAllFilters}\r\n            >\r\n                <option hidden value='default'>\r\n                    Types...\r\n                </option>\r\n                {/* <option value='default'>By default</option> */}\r\n                {types.map((type, index) => {\r\n                    return (\r\n                        <option key={index} value={type.name}>\r\n                            {type.name}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </select>\r\n            <br></br>\r\n\r\n            <button onClick={resetFilters}>Reset filters</button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Navbar\r\n                search={search}\r\n                setSearch={setSearch}\r\n                setPostsPerPage={setPostsPerPage}\r\n                setCurrentPage={setCurrentPage}\r\n                setMaxLimit={setMaxLimit}\r\n                setMinLimit={setMinLimit}\r\n                setPageLimit={setPageLimit}\r\n            />\r\n\r\n            {filtersButtons}\r\n\r\n            <h1 className={style.title}>Pokemons</h1>\r\n\r\n            <div className={style.home}>\r\n\r\n                {mainComponent}\r\n\r\n                <Pagination\r\n                    totalPosts={pokemons.length}\r\n                    postsPerPage={postsPerPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    currentPage={currentPage}\r\n                    maxLimit={maxLimit}\r\n                    setMaxLimit={setMaxLimit}\r\n                    minLimit={minLimit}\r\n                    setMinLimit={setMinLimit}\r\n                    pageLimit={pageLimit}\r\n                    setPageLimit={setPageLimit}\r\n                />\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n        </div>\r\n    );\r\n}\r\n","import style from './Landing.module.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Landing() {\r\n\r\n    return(\r\n        <div className={style.box}>\r\n            <div>\r\n                <h1>Pokemon API</h1>\r\n                <Link to={\"/pokemons\"}>\r\n                    <button>Enter</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport * as actions from \"../../redux/actions/index\";\r\nimport * as ReactRedux from \"react-redux\";\r\n\r\nimport style from \"./PokemonDetails.module.css\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport Error from \"../Error/Error\";\r\nimport NavbarNoSearch from \"../Navbar/Navbar\";\r\n\r\nexport default function PokemonDetail(props) {\r\n    let { id } = useParams();\r\n\r\n    const pokemon = ReactRedux.useSelector((state) => state.pokemonDetails);\r\n    const error = ReactRedux.useSelector((state) => state.error)\r\n    const dispatch = ReactRedux.useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.clearError())\r\n        dispatch(actions.getPokemonById(id));\r\n        return () => {\r\n            dispatch(actions.clearDetail());\r\n        };\r\n    }, [dispatch, id]);\r\n\r\n    id = parseInt(id)\r\n\r\n    const handleDelete = (event) => {\r\n        dispatch(actions.deletePokemon(pokemon.id))\r\n        alert(\"pokemon delete succesfully\")\r\n    }\r\n\r\n    //check if there was an error\r\n    if (error) {\r\n        return <Error/>\r\n    }\r\n    else if (!Object.keys(pokemon).length){\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n            <NavbarNoSearch/>\r\n            <div className={style.details}>\r\n                <h2>{pokemon.id}</h2>\r\n                <h1>{pokemon.name.toUpperCase()}</h1>\r\n                <img src={pokemon.img} alt='imagen pokemon' />\r\n                <h4>\r\n                    Type(s) <br></br>\r\n                    {\"\\n\" + pokemon.types?.map((type) => type.toUpperCase())}\r\n                </h4>\r\n                <h4>\r\n                    Stats <br></br> \r\n                    HP: {pokemon.hp > 1 ? pokemon.hp : 'Unknown'}{\" - \"} \r\n                    ATTK: {pokemon.attk > 1 ? pokemon.attk : 'Unknown'}{\" - \"}\r\n                    DEF:{pokemon.def > 1 ? pokemon.def : 'Unknown'}\r\n                    <br></br> \r\n                    SPEED: {pokemon.speed > 1 ? pokemon.speed : 'Unknown'}{\" - \"}\r\n                    HEIGHT:{pokemon.height > 1 ? pokemon.height : 'Unknown'}{\" - \"}\r\n                    WEIGHT: {pokemon.weight > 1 ? pokemon.weight : 'Unknown'}\r\n                </h4>\r\n                <br></br>\r\n                <button className={style.deleteBttn} hidden={pokemon.id < 20000} onClick={handleDelete}>Delete Pokemon</button>\r\n                <Link to={`/pokemons/edit/${pokemon.id}`}>\r\n                    <button className={style.editBttn} hidden={pokemon.id < 20000} >Edit Pokemon</button>\r\n                </Link>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import { Component } from \"react\";\r\n\r\nexport default class NotFound extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>This page doesn't exist</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","export function validateInputs(input, pokemonsNames) {\r\n    const errors = {}\r\n\r\n    if(!input.name) errors.name = 'Name is required'\r\n    else if(input.name.length < 3) errors.name = 'Name has to have 3 or more characters'\r\n    else if(input.name.length > 12) errors.name = `Name can't be longer than 12 characters`\r\n    else if(!(/(^[a-zA-Z0-9. -])*$/g).test(input.name)) errors.name = 'Name contains invalid characters'\r\n    else {\r\n        pokemonsNames.map((name) =>{\r\n            if(name.toLowerCase() === input.name.toLowerCase().trim()){\r\n                return errors.name = `${input.name} is already in use`\r\n            }\r\n            else return null\r\n        })\r\n    }\r\n\r\n    if(input.img){\r\n        if (input.img.length > 249) errors.img = \"The URL can't be longer than 250 characters\"\r\n        else if(!(/(http(s?):)([/|.|\\w|\\s|-])*.(?:jpg|gif|png)/g).test(input.img)) errors.img = \"The url is invalid\"\r\n    }\r\n\r\n    if(input.hp.length === 0) errors.hp = \"The health can't be empty (leave 0 if unknown)\"\r\n    if(input.hp < 0) errors.hp = \"The health can't be negative\"\r\n    else if(input.hp > 1) {\r\n        if(input.hp > 255) errors.hp = \"The health can't be higher than 255\"\r\n        if(input.hp.includes(\".\")) errors.hp = \"Float numbers are not allowed\" \r\n    }\r\n\r\n    if(input.attk.length === 0) errors.attk = \"The attack can't be empty (leave 0 if unknown)\"\r\n    if(input.attk < 0) errors.attk = \"The attack can't be negative\"\r\n    else if(input.attk > 1){\r\n        if(input.attk > 255) errors.attk = \"The attack can't be higher than 255\"\r\n        if(input.attk.includes(\".\")) errors.attk = \"Float numbers are not allowed\"\r\n    }\r\n\r\n    if(input.def.length === 0) errors.def = \"The defense can't be empty (leave 0 if unknown)\"\r\n    if(input.def < 0) errors.def = \"The defense can't be negative\"\r\n    else if (input.def > 1){\r\n        if(input.def > 255) errors.def = \"The defense can't be higher than 255\"\r\n        if(input.def.includes(\".\")) errors.def = \"Float numbers are not allowed\"\r\n    }\r\n    \r\n    if(input.speed.length === 0) errors.speed = \"The speed can't be empty (leave 0 if unknown)\"\r\n    if(input.speed < 0) errors.speed = \"The speed can't be negative\"\r\n    else if(input.speed > 1){\r\n        if(input.speed > 255) errors.speed = \"The speed can't be higher than 255\"\r\n        if(input.speed.includes(\".\")) errors.speed = \"Float numbers are not allowed\"\r\n    }\r\n\r\n    if(input.height.length === 0) errors.height = \"The height can't be empty (leave 0 if unknown)\"\r\n    if(input.height < 0) errors.height = \"The height can't be negative\"\r\n    else if(input.height > 1){\r\n        if(input.height > 255) errors.height = \"The height can't be higher than 255\"\r\n        if(input.height.includes(\".\")) errors.height = \"Float numbers are not allowed\"\r\n    }\r\n\r\n    if(input.weight.length === 0) errors.weight = \"The weight can't be empty (leave 0 if unknown)\"\r\n    if(input.weight < 0) errors.weight = \"The weight can't be negative\"\r\n    else if(input.weight > 1){\r\n        if(input.weight > 255) errors.weight = \"The weight can't be higher than 255\"\r\n        if(input.weight.includes(\".\")) errors.weight = \"Float numbers are not allowed\"\r\n    } \r\n\r\n    if(input.types.length === 0) errors.types = \"You have to choose at least one type\"\r\n\r\n    return errors\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/index\";\r\nimport Error from \"../Error/Error\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport NavbarNoSearch from \"../Navbar/Navbar\";\r\n\r\nimport style from \"./CreatePokemon.module.css\";\r\nimport { validateInputs } from \"./Validators\";\r\n\r\nexport default function CreatePokemon() {\r\n\r\n    const error = useSelector((state) => state.error)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const types = useSelector((state) => state.types);\r\n    const pokemonsNames = useSelector((state) => state.pokemonsNames);\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.clearError())\r\n        if (!types.length) dispatch(actions.getTypes());\r\n        if (!pokemonsNames.length) dispatch(actions.getAllNames());\r\n    }, [dispatch, types.length, pokemonsNames.length]);\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [state, setState] = useState({\r\n        name: \"\",\r\n        hp: 0,\r\n        attk: 0,\r\n        def: 0,\r\n        speed: 0,\r\n        height: 0,\r\n        weight: 0,\r\n        img: \"\",\r\n        types: [],\r\n    });\r\n\r\n    const handleInputs = (event) => {\r\n        const { name, value, checked, id } = event.target;\r\n\r\n        if (name === \"types\") {\r\n            types[id].isChecked = checked;\r\n            if (checked) {\r\n                setState((oldData) => {\r\n                    const newData = {\r\n                        ...oldData,\r\n                        types: state.types.concat(value),\r\n                    };\r\n\r\n                    setErrors(validateInputs(newData, pokemonsNames));\r\n\r\n                    return newData;\r\n                });\r\n            } else if (!checked) {\r\n                setState((oldData) => {\r\n                    const newData = {\r\n                        ...oldData,\r\n                        types: state.types.filter((i) => i !== value),\r\n                    };\r\n\r\n                    setErrors(validateInputs(newData, pokemonsNames));\r\n\r\n                    return newData;\r\n                });\r\n            }\r\n        } else {\r\n            setState((oldData) => {\r\n                const newData = { ...oldData, [name]: value };\r\n\r\n                setErrors(validateInputs(newData, pokemonsNames));\r\n\r\n                return newData;\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        if (!Object.keys(errors).length) {\r\n            dispatch(actions.createPokemon(state));\r\n\r\n            alert(\"Pokemon created successfully\");\r\n        } else\r\n            alert(`Please, check \" ${Object.keys(errors)} \" before submiting`);\r\n    };\r\n\r\n    if(error){\r\n        return <Error/>\r\n    }\r\n    else if(!types.length || !pokemonsNames.length){\r\n        return <Loading/>\r\n    }\r\n    else{\r\n        return (\r\n            <>\r\n            <NavbarNoSearch/>\r\n            <h1>Create Pokemon</h1>\r\n            <div className={style.box}>\r\n                <div className={style.form}>\r\n                    <h4>Name and stats</h4>\r\n                    <form className={style.form2}\r\n                        onSubmit={handleSubmit}\r\n                        autoComplete='off'\r\n                        spellCheck=\"false\"\r\n                    >\r\n                    <div>\r\n                        <div>\r\n                            <label>Name: </label>\r\n                            <input\r\n                                type='text'\r\n                                name='name'\r\n                                value={state.name}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.name}</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Health: </label>\r\n                            <input\r\n                                type='number'\r\n                                name='hp'\r\n                                value={state.hp}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.hp}</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label>Attack: </label>\r\n                            <input\r\n                                type='number'\r\n                                name='attk'\r\n                                value={state.attk}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.attk}</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Defense: </label>\r\n                            <input\r\n                                type='number'\r\n                                name='def'\r\n                                value={state.def}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.def}</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label>Speed: </label>\r\n                            <input\r\n                                type='number'\r\n                                name='speed'\r\n                                value={state.speed}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.speed}</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Height: </label>\r\n                            <input\r\n                                type='number'\r\n                                name='height'\r\n                                value={state.height}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.height}</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label>weight: </label>\r\n                            <input\r\n                                type='number'\r\n                                name='weight'\r\n                                value={state.weight}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.weight}</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Image: (url)</label>\r\n \r\n                            <input\r\n                                type='text'\r\n                                name='img'\r\n                                value={state.img}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.img}</label>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                        <button\r\n                            className={style.button}\r\n                            type='submit'\r\n                            disabled={\r\n                                Object.keys(errors).length || state.name === \"\"\r\n                            }\r\n                        >\r\n                            Create Pokemon\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className={style.types}>\r\n                    <h4>Types</h4>\r\n                    <ul>\r\n                        {types?.map((type, index) => (\r\n                            <li className={style.lista2} key={type.id}>\r\n                                    <input\r\n                                        key={index}\r\n                                        type='checkbox'\r\n                                        id={index}\r\n                                        name='types'\r\n                                        value={type.id}\r\n                                        checked={type.isChecked}\r\n                                        onChange={handleInputs}\r\n                                        disabled={\r\n                                            state.types.length > 1 &&\r\n                                            type.isChecked === false\r\n                                        }\r\n                                    />\r\n                                    <label htmlFor={`custom-checkbox-${types.id}`}>\r\n                                        {type.name}\r\n                                    </label>\r\n                                    <br></br>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <p>{errors.types}</p>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","export function validateInputs(input, pokemonsNames) {\r\n    const errors = {}\r\n\r\n    if(!input.name) errors.name = 'Name is required'\r\n    else if(input.name.length < 3) errors.name = 'Name has to have 3 or more characters'\r\n    else if(input.name.length > 12) errors.name = `Name can't be longer than 12 characters`\r\n    else if(!(/(^[a-zA-Z0-9. -])*$/g).test(input.name)) errors.name = 'Name contains invalid characters'\r\n    else {\r\n        pokemonsNames.map((name) =>{\r\n            if(name.toLowerCase() === input.name.toLowerCase().trim()){\r\n                return errors.name = `${input.name} is already in use`\r\n            }\r\n            else return null\r\n        })\r\n    }\r\n\r\n    if(input.img){\r\n        if (input.img.length > 249) errors.img = \"The URL can't be longer than 250 characters\"\r\n        else if(!(/(http(s?):)([/|.|\\w|\\s|-])*.(?:jpg|gif|png)/g).test(input.img)) errors.img = \"The url is invalid\"\r\n    }\r\n\r\n    if(input.hp.length === 0) errors.hp = \"The health can't be empty (leave 0 if unknown)\"\r\n    if(input.hp < 0) errors.hp = \"The health can't be negative\"\r\n    else if(input.hp > 1) {\r\n        if(input.hp > 255) errors.hp = \"The health can't be higher than 255\"\r\n        if(input.hp.includes(\".\")) errors.hp = \"Float numbers are not allowed\" \r\n    }\r\n\r\n    if(input.attk.length === 0) errors.attk = \"The attack can't be empty (leave 0 if unknown)\"\r\n    if(input.attk < 0) errors.attk = \"The attack can't be negative\"\r\n    else if(input.attk > 1){\r\n        if(input.attk > 255) errors.attk = \"The attack can't be higher than 255\"\r\n        if(input.attk.includes(\".\")) errors.attk = \"Float numbers are not allowed\"\r\n    }\r\n\r\n    if(input.def.length === 0) errors.def = \"The defense can't be empty (leave 0 if unknown)\"\r\n    if(input.def < 0) errors.def = \"The defense can't be negative\"\r\n    else if (input.def > 1){\r\n        if(input.def > 255) errors.def = \"The defense can't be higher than 255\"\r\n        if(input.def.includes(\".\")) errors.def = \"Float numbers are not allowed\"\r\n    }\r\n    \r\n    if(input.speed.length === 0) errors.speed = \"The speed can't be empty (leave 0 if unknown)\"\r\n    if(input.speed < 0) errors.speed = \"The speed can't be negative\"\r\n    else if(input.speed > 1){\r\n        if(input.speed > 255) errors.speed = \"The speed can't be higher than 255\"\r\n        if(input.speed.includes(\".\")) errors.speed = \"Float numbers are not allowed\"\r\n    }\r\n\r\n    if(input.height.length === 0) errors.height = \"The height can't be empty (leave 0 if unknown)\"\r\n    if(input.height < 0) errors.height = \"The height can't be negative\"\r\n    else if(input.height > 1){\r\n        if(input.height > 255) errors.height = \"The height can't be higher than 255\"\r\n        if(input.height.includes(\".\")) errors.height = \"Float numbers are not allowed\"\r\n    }\r\n\r\n    if(input.weight.length === 0) errors.weight = \"The weight can't be empty (leave 0 if unknown)\"\r\n    if(input.weight < 0) errors.weight = \"The weight can't be negative\"\r\n    else if(input.weight > 1){\r\n        if(input.weight > 255) errors.weight = \"The weight can't be higher than 255\"\r\n        if(input.weight.includes(\".\")) errors.weight = \"Float numbers are not allowed\"\r\n    } \r\n\r\n    if(input.types.length === 0) errors.types = \"You have to choose at least one type\"\r\n\r\n    return errors\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as actions from \"../../redux/actions/index\";\r\nimport Error from \"../Error/Error\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport NavbarNoSearch from \"../Navbar/Navbar\";\r\n\r\nimport style from \"./EditPokemoin.module.css\";\r\nimport { validateInputs } from \"./Validators\";\r\n\r\nexport default function CreatePokemon() {\r\n\r\n    const {id} = useParams()\r\n\r\n    const error = useSelector((state) => state.error)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const types = useSelector((state) => state.types);\r\n    const pokemonsNames = useSelector((state) => state.pokemonsNames);\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.clearError())\r\n        if (!types.length) dispatch(actions.getTypes());\r\n        if (!pokemonsNames.length) dispatch(actions.getAllNames());\r\n    }, [dispatch, types.length, pokemonsNames.length]);\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [state, setState] = useState({\r\n        name: \"\",\r\n        hp: 0,\r\n        attk: 0,\r\n        def: 0,\r\n        speed: 0,\r\n        height: 0,\r\n        weight: 0,\r\n        img: \"\",\r\n        types: [],\r\n    });\r\n\r\n    const handleInputs = (event) => {\r\n        const { name, value, checked, id } = event.target;\r\n\r\n        if (name === \"types\") {\r\n            types[id].isChecked = checked;\r\n            if (checked) {\r\n                setState((oldData) => {\r\n                    const newData = {\r\n                        ...oldData,\r\n                        types: state.types.concat(value),\r\n                    };\r\n\r\n                    setErrors(validateInputs(newData, pokemonsNames));\r\n\r\n                    return newData;\r\n                });\r\n            } else if (!checked) {\r\n                setState((oldData) => {\r\n                    const newData = {\r\n                        ...oldData,\r\n                        types: state.types.filter((i) => i !== value),\r\n                    };\r\n\r\n                    setErrors(validateInputs(newData, pokemonsNames));\r\n\r\n                    return newData;\r\n                });\r\n            }\r\n        } else {\r\n            setState((oldData) => {\r\n                const newData = { ...oldData, [name]: value };\r\n\r\n                setErrors(validateInputs(newData, pokemonsNames));\r\n\r\n                return newData;\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        if (!Object.keys(errors).length) {\r\n            dispatch(actions.editPokemon(id, state));\r\n\r\n            alert(\"Pokemon edited successfully\");\r\n        } else\r\n            alert(`Please, check \" ${Object.keys(errors)} \" before submiting`);\r\n    };\r\n\r\n    if(error){\r\n        return <Error/>\r\n    }\r\n    else if(!types.length || !pokemonsNames.length){\r\n        return <Loading/>\r\n    }\r\n    else{\r\n        return (\r\n            <>\r\n            <NavbarNoSearch/>\r\n            <h1>Edit pokemon</h1>\r\n            <div className={style.box}>\r\n                <div className={style.form}>\r\n                    <h4>Name and stats</h4>\r\n                    <form className={style.form2}\r\n                        onSubmit={handleSubmit}\r\n                        autoComplete='off'\r\n                        spellCheck=\"false\"\r\n                    >\r\n                    <div>\r\n                        <div>\r\n                            <label>Name: </label>\r\n                            <input\r\n                                type='text'\r\n                                name='name'\r\n                                value={state.name}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.name}</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Health: </label>\r\n                            <input\r\n                                type='number'\r\n                                name='hp'\r\n                                value={state.hp}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.hp}</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label>Attack: </label>\r\n                            <input\r\n                                type='number'\r\n                                name='attk'\r\n                                value={state.attk}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.attk}</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Defense: </label>\r\n                            <input\r\n                                type='number'\r\n                                name='def'\r\n                                value={state.def}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.def}</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label>Speed: </label>\r\n                            <input\r\n                                type='number'\r\n                                name='speed'\r\n                                value={state.speed}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.speed}</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Height: </label>\r\n                            <input\r\n                                type='number'\r\n                                name='height'\r\n                                value={state.height}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.height}</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label>weight: </label>\r\n                            <input\r\n                                type='number'\r\n                                name='weight'\r\n                                value={state.weight}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.weight}</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Image: (url)</label>\r\n \r\n                            <input\r\n                                type='text'\r\n                                name='img'\r\n                                value={state.img}\r\n                                onChange={handleInputs}\r\n                            />\r\n                            <label className={style.errors}>{errors.img}</label>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                        <button\r\n                            className={style.button}\r\n                            type='submit'\r\n                            disabled={\r\n                                Object.keys(errors).length || state.name === \"\"\r\n                            }\r\n                        >\r\n                            Create Pokemon\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className={style.types}>\r\n                    <h4>Types</h4>\r\n                    <ul>\r\n                        {types?.map((type, index) => (\r\n                            <li className={style.lista2} key={type.id}>\r\n                                    <input\r\n                                        key={index}\r\n                                        type='checkbox'\r\n                                        id={index}\r\n                                        name='types'\r\n                                        value={type.id}\r\n                                        checked={type.isChecked}\r\n                                        onChange={handleInputs}\r\n                                        disabled={\r\n                                            state.types.length > 1 &&\r\n                                            type.isChecked === false\r\n                                        }\r\n                                    />\r\n                                    <label htmlFor={`custom-checkbox-${types.id}`}>\r\n                                        {type.name}\r\n                                    </label>\r\n                                    <br></br>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <p>{errors.types}</p>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Home from './components/Home/Home.jsx'\r\nimport Landing from './components/Landing/Landing.jsx'\r\nimport PokemonDetails from './components/PokemonDetails/PokemonDetails.jsx'\r\n\r\nimport './App.css';\r\nimport NotFound from './components/NotFound/NotFound.jsx';\r\nimport CreatePokemon from './components/CreatePokemon/CreatePokemon.jsx';\r\nimport Navbar from './components/Navbar/Navbar.jsx';\r\nimport EditPokemon from './components/EditPokemon/EditPokemon.jsx'\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/'>\r\n                    <Landing />\r\n                </Route>\r\n                <Route exact path='/pokemons'>\r\n                    <Home />\r\n                </Route>\r\n                <Route exact path='/pokemons/details/:id'>                \r\n                    <PokemonDetails />\r\n                </Route>\r\n                {/* <Route exact path={`/pokemons?name=${name}`}>\r\n                    <PokemonDetails />\r\n                </Route> */}\r\n                <Route exact path='/pokemons/create'>\r\n                    <CreatePokemon />\r\n                </Route>\r\n                <Route exact path='/pokemons/edit/:id'>\r\n                    <EditPokemon />\r\n                </Route>\r\n                <Route exact path='/pokemon/delete/:id'>\r\n                    <Navbar/>\r\n                </Route>\r\n                <Route path='*'>\r\n                    <Navbar/>\r\n                    <NotFound />\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store/index'\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport dotenv from 'dotenv'\r\nimport axios from 'axios';\r\ndotenv.config()\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API || \"http://localhost:3001\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}